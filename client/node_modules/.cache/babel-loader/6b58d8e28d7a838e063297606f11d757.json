{"ast":null,"code":"var _jsxFileName = \"/Users/lsm/Desktop/leesm/Study/codegangster_toto/src/component/ContentTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ContentTodo.css\";\nimport dummy from \"../static/dummyData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentTodo = ({\n  datas,\n  setDatas\n}) => {\n  _s();\n\n  const [isChecked, setIsChecked] = useState(false);\n\n  const deleteTodo = (some, deleteId) => {\n    const filterTodo = datas.filter(todo => {\n      return todo.id !== deleteId;\n    });\n    setDatas(filterTodo);\n  };\n\n  const checkHandler = ({\n    target\n  }) => {\n    setIsChecked(!isChecked);\n\n    if (target.checked) {\n      target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].className = \"checked\";\n    } else {\n      target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].className = \"unChecked\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo_Container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todoLists\",\n      children: datas.map(todo => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todoList\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todoMenu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"todoDate\",\n              children: [\"D - \", todo.d_day]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"createTodo\",\n              children: new Date(todo.createdAt).toLocaleDateString(\"ko-kr\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todoContent_checkbox\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"checkbox_group\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    id: \"check\",\n                    onChange: e => {\n                      checkHandler(e);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todoContent_delete\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"todoContent_deleteButton\",\n                  onClick: () => deleteTodo(todo.content, todo.id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-trash-alt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContentTodo, \"ZhOKOS+Td3oentFkMpi7jRDXPaI=\");\n\n_c = ContentTodo;\nexport default ContentTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentTodo\");","map":{"version":3,"sources":["/Users/lsm/Desktop/leesm/Study/codegangster_toto/src/component/ContentTodo.js"],"names":["React","useState","dummy","ContentTodo","datas","setDatas","isChecked","setIsChecked","deleteTodo","some","deleteId","filterTodo","filter","todo","id","checkHandler","target","checked","parentNode","children","className","map","d_day","Date","createdAt","toLocaleDateString","e","content"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./ContentTodo.css\";\nimport dummy from \"../static/dummyData\";\n\nconst ContentTodo = ({ datas, setDatas }) => {\n  const [isChecked, setIsChecked] = useState(false);\n\n  const deleteTodo = (some, deleteId) => {\n    const filterTodo = datas.filter((todo) => {\n      return todo.id !== deleteId;\n    });\n    setDatas(filterTodo);\n  };\n\n  const checkHandler = ({ target }) => {\n    setIsChecked(!isChecked);\n    if (target.checked) {\n      target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].className =\n        \"checked\";\n    } else {\n      target.parentNode.parentNode.parentNode.parentNode.parentNode.children[1].className =\n        \"unChecked\";\n    }\n  };\n  return (\n    <div className=\"todo_Container\">\n      <ul className=\"todoLists\">\n        {datas.map((todo) => {\n          return (\n            <li className=\"todoList\" key={todo.id}>\n              {/* 각 리스트 항목들 */}\n              <div className=\"todoMenu\">\n                <div className=\"todoDate\">D - {todo.d_day}</div>\n                <div className=\"createTodo\">\n                  {new Date(todo.createdAt).toLocaleDateString(\"ko-kr\")}\n                </div>\n                <div className=\"buttons\">\n                  <span className=\"todoContent_checkbox\">\n                    <div className=\"checkbox_group\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"check\"\n                        onChange={(e) => {\n                          checkHandler(e);\n                        }}\n                      />\n                    </div>\n                  </span>\n                  <span className=\"todoContent_delete\">\n                    <button\n                      className=\"todoContent_deleteButton\"\n                      onClick={() => deleteTodo(todo.content, todo.id)}\n                    >\n                      <i className=\"far fa-trash-alt\"></i>\n                    </button>\n                  </span>\n                </div>\n              </div>\n\n              <div>{todo.content}</div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContentTodo;\n"]},"metadata":{},"sourceType":"module"}