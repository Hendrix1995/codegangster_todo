[{"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/index.js":"1","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/App.js":"2","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/Header.js":"3","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/Footer.js":"4","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/CountClear.js":"5","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/ContentTodo.js":"6","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/MakeTodo.js":"7","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/Filterbar.js":"8","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/static/dummyData.js":"9"},{"size":180,"mtime":1632045894642,"results":"10","hashOfConfig":"11"},{"size":1335,"mtime":1632393968172,"results":"12","hashOfConfig":"11"},{"size":413,"mtime":1632065456309,"results":"13","hashOfConfig":"11"},{"size":175,"mtime":1632327698658,"results":"14","hashOfConfig":"11"},{"size":557,"mtime":1632327763692,"results":"15","hashOfConfig":"11"},{"size":2139,"mtime":1632327752730,"results":"16","hashOfConfig":"11"},{"size":2423,"mtime":1632327544887,"results":"17","hashOfConfig":"11"},{"size":1165,"mtime":1632327544888,"results":"18","hashOfConfig":"11"},{"size":1049,"mtime":1632153898846,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12satad",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/index.js",[],["42","43"],"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/App.js",[],"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/Header.js",[],"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/Footer.js",[],"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/CountClear.js",["44"],"import React from 'react';\nimport './CountClear.css';\nimport dummyData from '../static/dummyData';\n\nconst CountClear = ({ isClear, handleClear, datas, setDatas }) => {\n  return (\n    <div className=\"count_Container\">\n      {!datas.length ? (\n        <span className=\"span--remainTodos\">비어있어요!</span>\n      ) : (\n        <span className=\"span--remainTodos\">남은 할 일: {datas.length}</span>\n      )}\n      <button onClick={handleClear} className=\"btn--clearAll\">\n        Clear All\n      </button>\n    </div>\n  );\n};\n\nexport default CountClear;\n","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/ContentTodo.js",[],"/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/MakeTodo.js",["45"],"import React from \"react\";\nimport { useState } from \"react\";\nimport \"./MakeTodo.css\";\n// import ContentTodo from \"./ContentTodo\";\n// import dummyTodos from \"../static/dummyData\";\nimport shortid from \"shortid\";\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ko from \"date-fns/locale/ko\";\n\nregisterLocale(\"ko\", ko);\n\nconst MakeTodo = ({ datas, setDatas }) => {\n  const [message, setMessage] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n\n  const today = new Date();\n  const dday = startDate;\n  const gap = dday - today.getTime();\n  const result = Math.ceil(gap / (1000 * 60 * 60 * 24));\n\n  const addTodoClick = (event) => {\n    const todo = {\n      id: shortid(),\n      d_day: result,\n      content: message,\n      check: false,\n      createdAt: new Date().toLocaleDateString(\"ko-KR\"),\n      updatedAt: new Date().toLocaleDateString(\"ko-KR\"),\n    };\n\n    setDatas([...datas, todo]);\n    setMessage(\"\");\n  };\n\n  const handleChangeMsg = (event) => {\n    setMessage(event.target.value);\n  };\n  return (\n    <div className=\"Container\">\n      <div className=\"MakeTodo_input\">\n        <i class=\"fas fa-pencil-alt\"></i>\n        <span className=\"MakeTodo_title\">MAKE TODO!</span>\n        <i class=\"fas fa-calendar-day\"></i>\n        <DatePicker\n          className=\"MakeTodo_input__calendar\"\n          selected={startDate}\n          onChange={(date) => setStartDate(date)}\n          locale={ko}\n          dateFormat=\"yyyy년 MM월 dd일\"\n          minDate={new Date()}\n        ></DatePicker>\n        {/* ! 나 이부분 수정함!! 내일 말 하셈!!! 진짜 리얼로!! */}\n        {message ? (\n          <button className=\"MakeTodo_input--submit\" onClick={addTodoClick}>\n            ADD\n          </button>\n        ) : (\n          <button\n            className=\"MakeTodo_input--submit\"\n            onClick={() => alert(\"입력된 내용이 없습니다!\")}\n          >\n            ADD\n          </button>\n        )}\n      </div>\n      {/* 여기로 왔다!!!!!!!! */}\n      <div className=\"MakeTodo_input--message\">\n        <input\n          className=\"input_message\"\n          type=\"text\"\n          value={message}\n          onChange={handleChangeMsg}\n          placeholder=\"일정을 입력하세요\"\n        ></input>\n      </div>\n      {/* 여기있던 div */}\n    </div>\n  );\n};\n\nexport default MakeTodo;\n","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/component/Filterbar.js",["46"],"import React, { useState } from \"react\";\nimport \"./Filterbar.css\";\n\nconst Filterbar = ({ datas, setDatas }) => {\n  const handleChange = (e) => {\n    if (e.target.value === \"D-day\") {\n      const cpDatas = datas.slice();\n      const dDaySort = cpDatas.sort((a, b) => a.d_day - b.d_day);\n      setDatas(dDaySort);\n    }\n\n    if (e.target.value === \"Create At\") {\n      const cpDatas = datas.slice();\n      const createdAtSort = cpDatas.sort(\n        (a, b) => new Date(b.createdAt) - new Date(a.createdAt)\n      );\n      setDatas(createdAtSort);\n    }\n  };\n  const today = new Date();\n\n  return (\n    <div className=\"filterbar__container\">\n      <div className=\"filterbar__wrapper\">\n        <select className=\"dropdown\" onChange={handleChange}>\n          드롭다운\n          <option className=\"option\">--정렬방식 선택--</option>\n          <option className=\"option\">D-day</option>\n          <option className=\"option\">Create At</option>\n        </select>\n        <div className=\"filterbar__currentDate\">\n          {today.getFullYear()}년{today.getMonth() + 1}월{today.getDate()}일\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filterbar;\n","/Users/lsm/Desktop/leesm/Study/codegangster_toto/client/src/static/dummyData.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":7,"column":38,"nodeType":"53","messageId":"54","endLine":7,"endColumn":54},{"ruleId":"51","severity":1,"message":"56","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'dummyData' is defined but never used.","Identifier","unusedVar","'setDefaultLocale' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]